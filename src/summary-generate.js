/**
 * Automaticaly generate SUMMARY.md for gitbook.
 * update: 2020-10-14
 * author: snomiao@gmail.com
 */

// process.chdir("docs")
const fs = require('fs')
const firstline = require('firstline');
const dirTree = require("directory-tree");

const main = (async () => {
    const tree = dirTree("docs");
    const SUMMARY_content = await indentedListGenerate(tree)
    const TEMPLATE = await fs.promises.readFile("SUMMARY-TEMPLATE.md", 'utf8')
    const SUMMARY = TEMPLATE.replace("{{AUTO-GENERATED}}", SUMMARY_content) + "<!-- GENERATED BY summary-generate.js -->"
    await fs.promises.writeFile("SUMMARY.md", SUMMARY)
})

if (!module.parent) main().then(console.log).catch(console.error)
exports = main;

// console.log(tree)

async function indentedListGenerate(tree, indent = 0) {
    const { path, name, size, type, children } = tree

    const re = (await Promise.all(children.sort((a, b) => a.name.localeCompare(b.name)).map(async node => {
        // notices that node can be a file or a folder(tree)

        if (node.children) return await indentedListGenerate(node, indent + 1)
        const path = node.path.replace(/\\/g, '/')
        let firstLine = await firstline(path)

        // remove the empty lines in start and put the # title on the top
        // if (path === "docs/04-crud/Query-Documents/Query-for-Null-or-Missing-Fields.md") {
        //     console.log(path, firstLine === '')
        // }
        if (firstLine.trim() === "" && (await fs.promises.stat(path)).size >= 1) {
            await fs.promises.writeFile(path, (await fs.promises.readFile(path, "utf8")).trimLeft())
            firstLine = await firstline(path)
        }

        // get title from first line
        let title = node.name
        if (firstLine.startsWith("#")) {
            title = firstLine.slice(1).replace("[ ](#)", "").trim()
        }
        // console.log(title, path)
        return "  ".repeat(indent) + `* [${title}]( ${path} )`
    }))).join("\n")
    return re
}